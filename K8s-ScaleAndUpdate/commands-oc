# Commands (Red Hat OpenShift)

## Introduction
- OpenShift projects are Kubernetes namespaces with additional administrative functions. Therefore, projects also provide isolation within an OpenShift cluster.
- Verify that oc CLI is installed
`oc version`
- List the Pods in this namespace.
`oc get pods`
- In addition to Kubernetes objects, you can get OpenShift specific objects.
`oc get buildconfigs`
- View the OpenShift project that is currently in use.
`oc project`

## OpenShift web console
In addition to the CLI, OpenShift provides an intuitive web console. This is a useful and powerful feature because it enables you to deploy applications, view resources, monitor applications and view logs, and much more right in the console.
- Notice the word “Administrator” at the top left. This indicates that you are in the Administrator perspective. There is also a Developer perspective. Each perspective provides workflows specific to that persona. Switch to the Developer perspective to begin deploying an application.

## Deploy an application in the web console
The Developer perspective provides workflows specific to developer use cases, such as the ability to create and deploy applications.
- to add a new application
- Click the +Add button to add a new application
- Select From Git among the options
- You will be redirected to Import from Git window. OpenShift will deploy an application using only one input from you: the application source
- In the Git Repo URL box, paste the sample one mentioned below
`https://github.com/sclorg/nodejs-ex.git`
- In the Builder section, scroll down to see the various builder images. We shall be using the Node.js image for our application. Ensure that this image has been selected
- Keep the rest of the default options as they already are. Then scroll down and click Create
- In the Topology view, you should now see your newly created application (NOTE: It will take several minutes for the application to appear. Refresh the browser if within 3 minutes, you don’t see any application)

##  View application in the web console
 The Topology view provides quick links to a lot of important parts of an application:

- The outer circle gets the information on the application.
- The inner circle with the Node.js logo gives information about the Deployment.
- The GitHub icon is used to access the code repository.
- The check mark shows the most recent build (you will see circular arrows if the build is in progress).
- The arrow coming out of a box can be used to view the application in the browser if the application is externally available.
- to bring up information on the Deployment: Click the inner circle with the Node.js logo. you will see four resources associated with this Deployment
1. a Pod that runs the containerized application
2. a Build that uses the s2i strategy to build the application into a container image
3. a Service that exposes the application as a network service
4. a Route that provides an externally reachable hostname.
- to see logs: Click View logs on the line that says Build #1
- to see a few key completed steps read the logs. For instance The repository is cloned, a Dockerfile is generated, an image is built, and the image is pushed to the internal registry.
- Click the Details tab for this Build And then click the link under Owner (at the very bottom) that says BC (Build Config).
- If you look at the Details and YAML tabs, you’ll see many concepts that we talked about in this module: triggers, build strategy, webhooks, and more.